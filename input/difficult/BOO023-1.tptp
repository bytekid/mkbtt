%--------------------------------------------------------------------------
% File     : BOO023-1 : TPTP v3.6.0. Released v2.2.0.
% Domain   : Boolean Algebra
% Problem  : Half of Padmanabhan's 6-basis with Pixley, part 1.
% Version  : [MP96] (equality) axioms : Especial.
% English  : Part 1 (of 3) of the proof that half of Padmanaban's self-dual
%            independent 6-basis for Boolean Algebra, together with a Pixley
%            polynomial, is a basis for Boolean algebra.

% Refs     : [McC98] McCune (1998), Email to G. Sutcliffe
%          : [MP96]  McCune & Padmanabhan (1996), Automated Deduction in Eq
% Source   : [McC98]
% Names    : DUAL-BA-2-a [MP96]

% Status   : Unsatisfiable
% Rating   : 0.44 v3.4.0, 0.50 v3.1.0, 0.33 v2.7.0, 0.36 v2.6.0, 0.17 v2.5.0, 0.00 v2.2.1
% Syntax   : Number of clauses     :    8 (   0 non-Horn;   8 unit;   1 RR)
%            Number of atoms       :    8 (   8 equality)
%            Maximal clause size   :    1 (   1 average)
%            Number of predicates  :    1 (   0 propositional; 2-2 arity)
%            Number of functors    :    8 (   4 constant; 0-3 arity)
%            Number of variables   :   15 (   2 singleton)
%            Maximal term depth    :    5 (   2 average)

% Comments :
%--------------------------------------------------------------------------
%----Half of Padmanabhan's self-dual independent 6-basis for Boolean Algebra:
cnf(multiply_add,axiom,
    ( multiply(add(X,Y),Y) = Y )).

cnf(multiply_add_property,axiom,
    ( multiply(X,add(Y,Z)) = add(multiply(Y,X),multiply(Z,X)) )).

cnf(additive_inverse,axiom,
    ( add(X,inverse(X)) = n1 )).

%----pixley(X,Y,Z) is a Pixley polynomial:
cnf(pixley_defn,axiom,
    ( pixley(X,Y,Z) = add(multiply(X,inverse(Y)),add(multiply(X,Z),multiply(inverse(Y),Z))) )).

cnf(pixley1,axiom,
    ( pixley(X,X,Y) = Y )).

cnf(pixley2,axiom,
    ( pixley(X,Y,Y) = X )).

cnf(pixley3,axiom,
    ( pixley(X,Y,X) = X )).

%----Denial of conclusion:
cnf(prove_add_multiply_property,negated_conjecture,
    (  add(a,multiply(b,c)) != multiply(add(a,b),add(a,c)) )).

%--------------------------------------------------------------------------
