%--------------------------------------------------------------------------
% File     : GRP184-4 : TPTP v3.6.0. Bugfixed v1.2.1.
% Domain   : Group Theory (Lattice Ordered)
% Problem  : Orthogonal elements commute and form a subgroup
% Version  : [Fuc94] (equality) axioms : Augmented.
% English  : 

% Refs     : [Fuc94] Fuchs (1994), The Application of Goal-Orientated Heuri
%          : [Sch95] Schulz (1995), Explanation Based Learning for Distribu
% Source   : [Sch95]
% Names    : p21x [Sch95]

% Status   : Unsatisfiable
% Rating   : 0.11 v3.4.0, 0.12 v3.3.0, 0.00 v2.7.0, 0.09 v2.6.0, 0.00 v2.2.1, 0.56 v2.2.0, 0.57 v2.1.0, 0.43 v2.0.0
% Syntax   : Number of clauses     :   21 (   0 non-Horn;  21 unit;   2 RR)
%            Number of atoms       :   21 (  21 equality)
%            Maximal clause size   :    1 (   1 average)
%            Number of predicates  :    1 (   0 propositional; 2-2 arity)
%            Number of functors    :    6 (   2 constant; 0-2 arity)
%            Number of variables   :   40 (   2 singleton)
%            Maximal term depth    :    4 (   2 average)

% Comments : ORDERING LPO inverse > product > greatest_lower_bound >
%            least_upper_bound > identity > a
% Bugfixes : v1.2.1 - Duplicate axioms in GRP004-2.ax removed.
%--------------------------------------------------------------------------
%----Include equality group theory axioms 
include('Axioms/GRP004-0.ax').
%----Include Lattice ordered group (equality) axioms
include('Axioms/GRP004-2.ax').
%--------------------------------------------------------------------------
cnf(p21x_1,hypothesis,
    ( inverse(identity) = identity )).

cnf(p21x_2,hypothesis,
    ( inverse(inverse(X)) = X )).

cnf(p21x_3,hypothesis,
    ( inverse(multiply(X,Y)) = multiply(inverse(Y),inverse(X)) )).

cnf(p21x_4,hypothesis,
    ( inverse(greatest_lower_bound(X,Y)) = least_upper_bound(inverse(X),inverse(Y)) )).

cnf(p21x_5,hypothesis,
    ( inverse(least_upper_bound(X,Y)) = greatest_lower_bound(inverse(X),inverse(Y)) )).

cnf(prove_p21x,negated_conjecture,
    (  multiply(least_upper_bound(a,identity),inverse(greatest_lower_bound(a,identity))) != multiply(inverse(greatest_lower_bound(a,identity)),least_upper_bound(a,identity)) )).

%--------------------------------------------------------------------------
